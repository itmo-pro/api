/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.2.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
*/
package ru.itmo.api.controller

import ru.itmo.api.model.Book
import ru.itmo.api.model.BookPage
import ru.itmo.api.model.Error
import io.swagger.v3.oas.annotations.*
import io.swagger.v3.oas.annotations.enums.*
import io.swagger.v3.oas.annotations.media.*
import io.swagger.v3.oas.annotations.responses.*
import io.swagger.v3.oas.annotations.security.*
import org.springframework.http.HttpStatus
import org.springframework.http.ResponseEntity

import org.springframework.web.bind.annotation.*
import org.springframework.validation.annotation.Validated

import jakarta.validation.Valid
import jakarta.validation.constraints.Min

@Validated
@RequestMapping("\${api.base-path:}")
interface ApiApi {

    @Operation(
        summary = "Add new book",
        operationId = "addBook",
        description = "",
        responses = [
            ApiResponse(responseCode = "201", description = "Book just added by request", content = [Content(schema = Schema(implementation = Book::class))]),
            ApiResponse(responseCode = "400", description = "Bad Request", content = [Content(schema = Schema(implementation = Error::class))]),
            ApiResponse(responseCode = "500", description = "Internal Error", content = [Content(schema = Schema(implementation = Error::class))])
        ]
    )
    @RequestMapping(
            method = [RequestMethod.POST],
            value = ["/api/v1/book"],
            produces = ["application/json"],
            consumes = ["application/json"]
    )
    fun addBook(@Parameter(description = "", required = true) @Valid @RequestBody book: Book): ResponseEntity<Book> {
        return ResponseEntity(HttpStatus.NOT_IMPLEMENTED)
    }

    @Operation(
        summary = "Get books page",
        operationId = "getBookPage",
        description = "",
        responses = [
            ApiResponse(responseCode = "200", description = "Success", content = [Content(schema = Schema(implementation = BookPage::class))]),
            ApiResponse(responseCode = "500", description = "Internal error", content = [Content(schema = Schema(implementation = Error::class))])
        ]
    )
    @RequestMapping(
            method = [RequestMethod.GET],
            value = ["/api/v1/book"],
            produces = ["application/json"]
    )
    fun getBookPage(@Min(0)@Parameter(description = "Zero-based page index (0..N)", schema = Schema(defaultValue = "0")) @Valid @RequestParam(value = "page", required = false, defaultValue = "0") page: kotlin.Int): ResponseEntity<BookPage> {
        return ResponseEntity(HttpStatus.NOT_IMPLEMENTED)
    }
}
